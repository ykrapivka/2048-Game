{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.initialState = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n        this.board = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"arraysEqual\",\n            value: function arraysEqual(arr1, arr2) {\n                return JSON.stringify(arr1) === JSON.stringify(arr2);\n            }\n        },\n        {\n            key: \"turnBoard\",\n            value: function turnBoard(direction) {\n                var size = this.board.length;\n                var newBoard = Array.from({\n                    length: size\n                }, function() {\n                    return Array(size).fill(0);\n                });\n                if (direction === \"forward\") {\n                    for(var i = 0; i < size; i++)for(var n = 0; n < size; n++)newBoard[n][size - 1 - i] = this.board[i][n];\n                    this.board = newBoard;\n                } else if (direction === \"back\") {\n                    for(var i1 = 0; i1 < size; i1++)for(var n1 = 0; n1 < size; n1++)newBoard[size - 1 - n1][i1] = this.board[i1][n1];\n                    this.board = newBoard;\n                }\n            }\n        },\n        {\n            key: \"compressRow\",\n            value: function compressRow(direction) {\n                var _this = this;\n                if (this.getStatus() === \"idle\" || this.getStatus() === \"win\") return;\n                var moved = false;\n                if (direction === \"up\" || direction === \"down\") this.turnBoard(\"forward\");\n                this.board.forEach(function(row, index) {\n                    var originalRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                    var rowValuesOnly = row.filter(function(cell) {\n                        return cell > 0;\n                    });\n                    var compressedRow = [];\n                    if (direction === \"left\" || direction === \"down\") rowValuesOnly.reverse();\n                    for(var i = rowValuesOnly.length - 1; i >= 0; i--)if (rowValuesOnly[i] === rowValuesOnly[i - 1] && i > 0) {\n                        compressedRow.unshift(rowValuesOnly[i] * 2);\n                        _this.score += rowValuesOnly[i] * 2;\n                        if (rowValuesOnly[i] * 2 === 2048) _this.status = \"win\";\n                        i--;\n                        moved = true;\n                    } else compressedRow.unshift(rowValuesOnly[i]);\n                    while(compressedRow.length < 4)compressedRow.unshift(0);\n                    if (direction === \"left\" || direction === \"down\") compressedRow.reverse();\n                    if (!_this.arraysEqual(originalRow, compressedRow)) moved = true;\n                    _this.board[index] = compressedRow;\n                });\n                if (direction === \"up\" || direction === \"down\") this.turnBoard(\"back\");\n                if (moved) {\n                    var _this_randomCell = (0, $efec029548ccee7f$export$71511d61b312f219)(this.randomCell(), 2), row1 = _this_randomCell[0], column1 = _this_randomCell[1];\n                    this.board[row1][column1] = this.pickRandomNumber();\n                }\n                if (!this.canMove()) this.status = \"lose\";\n            }\n        },\n        {\n            key: \"randomCell\",\n            value: function randomCell() {\n                var cellRow = Math.floor(Math.random() * 4);\n                var cellColumn = Math.floor(Math.random() * 4);\n                while(this.board[cellRow][cellColumn] !== 0){\n                    cellRow = Math.floor(Math.random() * 4);\n                    cellColumn = Math.floor(Math.random() * 4);\n                }\n                return [\n                    cellRow,\n                    cellColumn\n                ];\n            }\n        },\n        {\n            key: \"pickRandomNumber\",\n            value: function pickRandomNumber() {\n                var random = Math.random();\n                if (random < 0.1) return 4;\n                else return 2;\n            }\n        },\n        {\n            key: \"canMove\",\n            value: function canMove() {\n                for(var i = 0; i < 4; i++)for(var n = 0; n < 4; n++){\n                    if (this.board[i][n] === 0) return true;\n                    if (n < 3 && this.board[i][n] === this.board[i][n + 1]) return true;\n                    if (i < 3 && this.board[i][n] === this.board[i + 1][n]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.compressRow(\"left\");\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.compressRow(\"right\");\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.compressRow(\"up\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.compressRow(\"down\");\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                var _this_randomCell = (0, $efec029548ccee7f$export$71511d61b312f219)(this.randomCell(), 2), row1 = _this_randomCell[0], column1 = _this_randomCell[1];\n                var _this_randomCell1 = (0, $efec029548ccee7f$export$71511d61b312f219)(this.randomCell(), 2), row2 = _this_randomCell1[0], column2 = _this_randomCell1[1];\n                var ref;\n                while(row1 === row2 && column1 === column2)ref = (0, $efec029548ccee7f$export$71511d61b312f219)(this.randomCell(), 2), row2 = ref[0], column2 = ref[1], ref;\n                this.board[row1][column1] = this.pickRandomNumber();\n                this.board[row2][column2] = this.pickRandomNumber();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$gameField = document.querySelector(\"tbody\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$button = document.querySelector(\"button\");\nvar $197cd56b15c33885$var$rows = $197cd56b15c33885$var$gameField.querySelectorAll(\"tr\");\nvar $197cd56b15c33885$var$cells = document.querySelectorAll(\"td\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nfunction $197cd56b15c33885$var$styleCell(cell) {\n    cell.classList.add(\"field-cell--\".concat(cell.textContent));\n}\nfunction $197cd56b15c33885$var$updateScore() {\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.score;\n}\nfunction $197cd56b15c33885$var$clearCell(cell) {\n    if (cell.classList.contains(\"field-cell--\".concat(cell.textContent))) cell.classList.remove(\"field-cell--\".concat(cell.textContent));\n    cell.textContent = \"\";\n}\nfunction $197cd56b15c33885$var$updateBoard() {\n    for(var i = 0; i < $197cd56b15c33885$var$game.board.length; i++){\n        var cellsInRow = $197cd56b15c33885$var$rows[i].querySelectorAll(\"td\");\n        for(var n = 0; n < $197cd56b15c33885$var$game.board[i].length; n++)if ($197cd56b15c33885$var$game.board[i][n] !== 0) {\n            $197cd56b15c33885$var$clearCell(cellsInRow[n]);\n            cellsInRow[n].textContent = $197cd56b15c33885$var$game.board[i][n];\n            $197cd56b15c33885$var$styleCell(cellsInRow[n]);\n        } else $197cd56b15c33885$var$clearCell(cellsInRow[n]);\n        $197cd56b15c33885$var$updateScore();\n    }\n}\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$button.textContent === \"Start\") {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$updateBoard();\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n        $197cd56b15c33885$var$button.classList.remove(\"start\");\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    } else if ($197cd56b15c33885$var$button.textContent === \"Restart\") {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$updateBoard();\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$button.classList.remove(\"restart\");\n        $197cd56b15c33885$var$button.classList.add(\"start\");\n        $197cd56b15c33885$var$button.textContent = \"Start\";\n        $197cd56b15c33885$var$cells.forEach(function(cell) {\n            $197cd56b15c33885$var$clearCell(cell);\n        });\n    }\n});\nwindow.addEventListener(\"keydown\", function(ev) {\n    ev.preventDefault();\n    switch(ev.key){\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n    }\n    if ($197cd56b15c33885$var$game.getStatus() === \"win\") $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    if ($197cd56b15c33885$var$game.getStatus() === \"lose\") $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$updateBoard();\n});\n\n})();\n//# sourceMappingURL=index.62043bc5.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\nconst gameField = document.querySelector('tbody');\nconst score = document.querySelector('.game-score');\nconst button = document.querySelector('button');\nconst rows = gameField.querySelectorAll('tr');\nconst cells = document.querySelectorAll('td');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nfunction styleCell(cell) {\n  cell.classList.add(`field-cell--${cell.textContent}`);\n}\n\nfunction updateScore() {\n  score.textContent = game.score;\n}\n\nfunction clearCell(cell) {\n  if (cell.classList.contains(`field-cell--${cell.textContent}`)) {\n    cell.classList.remove(`field-cell--${cell.textContent}`);\n  }\n  cell.textContent = '';\n}\n\nfunction updateBoard() {\n  for (let i = 0; i < game.board.length; i++) {\n    const cellsInRow = rows[i].querySelectorAll('td');\n\n    for (let n = 0; n < game.board[i].length; n++) {\n      if (game.board[i][n] !== 0) {\n        clearCell(cellsInRow[n]);\n        cellsInRow[n].textContent = game.board[i][n];\n        styleCell(cellsInRow[n]);\n      } else {\n        clearCell(cellsInRow[n]);\n      }\n    }\n\n    updateScore();\n  }\n}\n\nbutton.addEventListener('click', () => {\n  if (button.textContent === 'Start') {\n    game.start();\n    updateBoard();\n    button.textContent = 'Restart';\n    button.classList.remove('start');\n    button.classList.add('restart');\n    messageStart.classList.add('hidden');\n  } else if (button.textContent === 'Restart') {\n    game.restart();\n    updateBoard();\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n    messageStart.classList.remove('hidden');\n    button.classList.remove('restart');\n    button.classList.add('start');\n    button.textContent = 'Start';\n\n    cells.forEach((cell) => {\n      clearCell(cell);\n    });\n  }\n});\n\nwindow.addEventListener('keydown', (ev) => {\n  ev.preventDefault();\n\n  switch (ev.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n  }\n\n  if (game.getStatus() === 'win') {\n    messageWin.classList.remove('hidden');\n  }\n\n  if (game.getStatus() === 'lose') {\n    messageLose.classList.remove('hidden');\n  }\n\n  updateBoard();\n});\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = initialState.map((row) => [...row]);\n    this.board = initialState.map((row) => [...row]);\n\n    this.score = 0;\n    this.status = `idle`;\n  }\n\n  arraysEqual(arr1, arr2) {\n    return JSON.stringify(arr1) === JSON.stringify(arr2);\n  }\n\n  turnBoard(direction) {\n    const size = this.board.length;\n    const newBoard = Array.from({ length: size }, () => Array(size).fill(0));\n\n    if (direction === 'forward') {\n      for (let i = 0; i < size; i++) {\n        for (let n = 0; n < size; n++) {\n          newBoard[n][size - 1 - i] = this.board[i][n];\n        }\n      }\n\n      this.board = newBoard;\n    } else if (direction === 'back') {\n      for (let i = 0; i < size; i++) {\n        for (let n = 0; n < size; n++) {\n          newBoard[size - 1 - n][i] = this.board[i][n];\n        }\n      }\n\n      this.board = newBoard;\n    }\n  }\n\n  compressRow(direction) {\n    if (this.getStatus() === `idle` || this.getStatus() === `win`) {\n      return;\n    }\n\n    let moved = false;\n\n    if (direction === 'up' || direction === 'down') {\n      this.turnBoard('forward');\n    }\n\n    this.board.forEach((row, index) => {\n      const originalRow = [...row];\n      const rowValuesOnly = row.filter((cell) => cell > 0);\n      const compressedRow = [];\n\n      if (direction === 'left' || direction === 'down') {\n        rowValuesOnly.reverse();\n      }\n\n      for (let i = rowValuesOnly.length - 1; i >= 0; i--) {\n        if (rowValuesOnly[i] === rowValuesOnly[i - 1] && i > 0) {\n          compressedRow.unshift(rowValuesOnly[i] * 2);\n          this.score += rowValuesOnly[i] * 2;\n\n          if (rowValuesOnly[i] * 2 === 2048) {\n            this.status = 'win';\n          }\n          i--;\n          moved = true;\n        } else {\n          compressedRow.unshift(rowValuesOnly[i]);\n        }\n      }\n\n      while (compressedRow.length < 4) {\n        compressedRow.unshift(0);\n      }\n\n      if (direction === 'left' || direction === 'down') {\n        compressedRow.reverse();\n      }\n\n      if (!this.arraysEqual(originalRow, compressedRow)) {\n        moved = true;\n      }\n\n      this.board[index] = compressedRow;\n    });\n\n    if (direction === 'up' || direction === 'down') {\n      this.turnBoard('back');\n    }\n\n    if (moved) {\n      const [row1, column1] = this.randomCell();\n\n      this.board[row1][column1] = this.pickRandomNumber();\n    }\n\n    if (!this.canMove()) {\n      this.status = 'lose';\n    }\n  }\n\n  randomCell() {\n    let cellRow = Math.floor(Math.random() * 4);\n    let cellColumn = Math.floor(Math.random() * 4);\n\n    while (this.board[cellRow][cellColumn] !== 0) {\n      cellRow = Math.floor(Math.random() * 4);\n      cellColumn = Math.floor(Math.random() * 4);\n    }\n\n    return [cellRow, cellColumn];\n  }\n\n  pickRandomNumber() {\n    const random = Math.random();\n\n    if (random < 0.1) {\n      return 4;\n    } else {\n      return 2;\n    }\n  }\n\n  canMove() {\n    for (let i = 0; i < 4; i++) {\n      for (let n = 0; n < 4; n++) {\n        if (this.board[i][n] === 0) {\n          return true;\n        }\n\n        if (n < 3 && this.board[i][n] === this.board[i][n + 1]) {\n          return true;\n        }\n\n        if (i < 3 && this.board[i][n] === this.board[i + 1][n]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  moveLeft() {\n    this.compressRow('left');\n  }\n\n  moveRight() {\n    this.compressRow('right');\n  }\n\n  moveUp() {\n    this.compressRow('up');\n  }\n  moveDown() {\n    this.compressRow('down');\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board.map((row) => [...row]);\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = `playing`;\n\n    const [row1, column1] = this.randomCell();\n    let [row2, column2] = this.randomCell();\n\n    while (row1 === row2 && column1 === column2) {\n      [row2, column2] = this.randomCell();\n    }\n\n    this.board[row1][column1] = this.pickRandomNumber();\n    this.board[row2][column2] = this.pickRandomNumber();\n  }\n\n  restart() {\n    this.board = this.initialState.map((row) => [...row]);\n\n    this.score = 0;\n    this.status = `idle`;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$efec029548ccee7f$export$71511d61b312f219","isArray","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","push","value","err","TypeError","$227c6742e0ff6f82$export$71511d61b312f219","iter","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","map","row","board","score","status","key","arr1","JSON","stringify","direction","size","newBoard","fill","i1","n1","_this","getStatus","moved","turnBoard","forEach","index","originalRow","rowValuesOnly","filter","cell","compressedRow","reverse","unshift","arraysEqual","_this_randomCell","randomCell","row1","column1","pickRandomNumber","canMove","cellRow","Math","floor","random","cellColumn","compressRow","ref","_this_randomCell1","row2","column2","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$gameField","document","querySelector","$197cd56b15c33885$var$score","$197cd56b15c33885$var$button","$197cd56b15c33885$var$rows","querySelectorAll","$197cd56b15c33885$var$cells","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$clearCell","classList","contains","concat","textContent","remove","$197cd56b15c33885$var$updateBoard","cellsInRow","$197cd56b15c33885$var$styleCell","add","addEventListener","start","restart","window","ev","preventDefault","moveUp","moveDown","moveLeft","moveRight"],"version":3,"file":"index.62043bc5.js.map"}